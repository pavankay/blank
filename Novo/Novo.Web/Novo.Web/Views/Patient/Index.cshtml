@model IEnumerable<Novo.Web.EF.Patient>
@using GridMvc.Html

@{
    ViewBag.Title = "Index";
}

<h2>Dashboard</h2>
@Scripts.Render("~/bundles/jquery")
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>

<form method="get" class="form-inline">
    <input type="search" name="searchTerm" class="form-control" />
    <input type="submit" value="Search By Name" class="btn btn-info" />

</form>

<div style="width:1000px;">
    @Html.Grid(Model).Columns(columns =>
                    {
                        columns.Add(c => c.Id).Titled("ID");
                        columns.Add(c => c.FirstName).Titled("First Name").Filterable(true);
                        columns.Add(c => c.LastName).Titled("Last Name");
                        columns.Add(c => c.MiddleName).Titled("Middle Name");
                        columns.Add(c => c.DateOfBirth).Titled("Date Of Birth");
                        columns.Add(c => c.Gender.Description).Titled("Gender");
                        columns.Add(c => c.MaritialStatu.Description).Titled("Marital Status");
                        columns.Add(c => c.MedicalProvider.FirstName).Titled("Medical Provider");
                    }).WithPaging(10).Sortable(true)
</div>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<script>
    $(document).ready(function () {
        $(".grid-mvc table tbody").delegate('tr', 'click', function () {
            location.href = '/Patient/EHR/' + $(this).find('td:first').text();
        });
    });
</script>

@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MiddleName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateOfBirth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GenderId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MaritialStatu.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MedicalProvider.Title)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MiddleName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateOfBirth)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Gender.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MaritialStatu.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MedicalProvider.FirstName)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>*@
